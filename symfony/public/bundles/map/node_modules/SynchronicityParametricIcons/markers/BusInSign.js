import {ParametricIcon} from "/node_modules/parametric-icon/index.js"
import {template} from "../templates/BusInSign.js"
import {abreviate} from "../marker_helper/abreviate.js"

/**
 * @class BusInSign
 * @extends ParametricIcon
 * @classdesc 
 * 
 * A parameterizable icon, use is with the icon-bus-in-sign html tag. 
 * All the parameter of this class can also be passed through html attribute.
 * 
 * @property {string} linecolor an image parameter.
 * @property {string} stopname an image parameter.
 * @property {string} messagecolor an image parameter.
 * @property {string} message an image parameter.
 * @property {string} scrolllen an image parameter.
 * @property {string} linetextcolor an image parameter.
 * @property {string} line an image parameter.
 */
class BusInSign extends ParametricIcon {

	connectedCallback(){
		this.setStyle(":host{display:block}")
		super.connectedCallback()
	}
	static get shadowMode(){
		return "open"
	}
	static get imageParameters() {
		return ["stopname","messagecolor","message","line","maxlength"]
	}
	static get serialize() {
		let std =  this.standardSerial
		let own = {
			maxlength : "number",
		      abreviations : {
		        type:"module",
		        cardinality:"one",
		        externalsOwner : this,
		        defaults:{}
		      }
		  }
		  return Object.assign(std,own)
	}
	static get template(){
		return template
	}
	static get useColorScheme(){
		return true
	}

	/**
	 * @overried
	 */
	getInternalArgs(){
		let linecolor = this.getColor("lineColor", this.line)
		let linetextcolor = this.getColor("lineTextColor", this.line)
		let args = {linecolor, linetextcolor}

   
    	args.stopname = abreviate(this.stopname ,this.maxlength, this.abreviations && this.abreviations.default)
    	return args
	}
}
export default BusInSign
