// Shorten the string s so that it's length is almost maxLen and a human may still have an idae of what is written.
export function abreviate(s,maxLen,Shorthands){
	

	if(!(s.length > maxLen))
		return s

	if(!Shorthands)
		Shorthands = {}

	// Tokenize the string and keep the separator in order to reinsert them later
	let splitReg = /([a-zA-Z\u00C0-\u017F]*)([^a-zA-Z\u00C0-\u017F]|$)/g
	let split = []
	let match = splitReg.exec(s)
	while(match && (match[1] || match[2])){
		split.push({word : match[1],sep : match[2]})
		match = splitReg.exec(s)
	}

	// Default result if nothing worked
	let result = s.substr(0,maxLen-1)+"â€¦"

	// If ther is at least one word...
	if(split.length > 1){
		function dropVowel(word){
			let w2 = word.replace(/[aeiouyAEIOUY\u00C0-\u017F]/g,"")
			if(!w2.endsWith("."))
				w2 += "."
			return w2.length < word.length? w2 : word
		}
		
		let splitResult 

		// Reassemble the abreviated with its original words separators.
		function join(arr){
			return arr.map(g=>g.word+g.sep).join("")
		}

		function isOk(result){
			return result.length <= maxLen
		}

		// Check in a predefined lookup table to see if we have official abreviation
		let shortHanded = split.map(w=>{
			let short = w.word && Shorthands[w.word.toLowerCase()] || w.word
			return {word:short,sep : w.sep}
		})
		splitResult = shortHanded
		result = join(splitResult)

		// If only replacing with official abrevaiation work, we are happy with the result.
		if(isOk(result))
			return result

		// Otherwise we try multiple methode and keep the result that have the higher score.
		// For now the scoring function is just taking the length of the longest word, assuming this word is the most recognizable  feature
		// in the name, so preserving it as much as possible should produce a result still identifiable for the user. 
		let maxWord = (len,g)=>g.word.length > len ? g.word.length : len
		let scoring = (aSplit)=>aSplit.reduce(maxWord,0)
		
		let maxScore = 0

		// Compute the score for a given abreviated spilt, if it's better than what we have, take str as new temporary best abreviation.
		function submit(str,split){
			let score = scoring(split)
			if(score>maxScore){
				result = str
				maxScore = score
			}
		}

		// Try to remove vowel from word that have at least three letters until the abreviation is short enougth.
		let noVowel = JSON.parse(JSON.stringify(shortHanded))
		for(let i = 0, g = "" ;g = noVowel[i];i++){
			let w = g.word
			if(w && w.length > 3){
				g.word = dropVowel(w)
				let res = join(noVowel)
				if(isOk(res)){
					submit(res,noVowel)
					break;
				}
			}
		}

		// Only keep first letters of words
		let dottedV = JSON.parse(JSON.stringify(shortHanded))
		let res1 = ""
		for(let i = 0, g = "" ;g = dottedV[i];i++){
			let w = g.word
			if(w &&  w.length > 2){
				g.word = w.charAt(0)+"."
				let res = join(dottedV)
				if(isOk(res)){
					submit(res,dottedV)
					break;
				}
			}
		}

		// Only keep first letters of words with vowel removed
		let dottedNv = JSON.parse(JSON.stringify(noVowel))
		let res2 = ""
		for(let i = 0, g = "" ;g = dottedNv[i];i++){
			let w = g.word
			if(w &&  w.length > 2){
				g.word = w.charAt(0)+"."
				let res = join(dottedNv)
				if(isOk(res)){
					submit(res,dottedNv)
					break;
				}
			}
		}
		
	}
	return result
}