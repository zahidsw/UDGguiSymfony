

security:
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        # main_login:
        #     pattern:   ^/(fr|en|zh)/login$
        #     anonymous: true
            
        # main:
        #     pattern: ^/
        #     form_login:
        #         login_path: /en/login
        #         provider: fos_userbundle
        #         csrf_token_generator: security.csrf.token_manager
        #         check_path: fos_user_security_check
        #         default_target_path: iot6_HomeBundle
        #     logout:
        #         path:   fos_user_security_logout
        #         target: fos_user_security_login
        #     anonymous:    true

        secured_area:
            anonymous: ~
            pattern: ^/
            form_login:
                provider: fos_userbundle
                # csrf_provider: form.csrf_provider
                login_path: /login
                # check_path: /login_check
                csrf_token_generator: security.csrf.token_manager
                check_path: fos_user_security_check
                default_target_path: iot6_HomeBundle
           


            oauth:
                resource_owners:
                    fiware:        "/login/check-fiware"
                login_path:        /login
                use_forward:       false
                failure_path:      /login
                

                oauth_user_provider:
                    service: App\Security\FOSUBUserProvider
            
            logout:
                path:   fos_user_security_logout
                target: fos_user_security_login
            anonymous:    true

        login:
            pattern:  ^/login$
            security: false

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       

    access_denied_url: /logina
            
                

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # access_control:
    #     - { path: ^/(fr|en|zh)/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
    #     - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
    #     - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
    #     - { path: ^/admin/, role: ROLE_ADMIN }
    #     - { path: ^/, role: ROLE_USER }
    #     #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

    # access_denied_url: /logina